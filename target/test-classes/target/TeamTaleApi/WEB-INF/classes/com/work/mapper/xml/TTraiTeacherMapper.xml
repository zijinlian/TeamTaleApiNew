<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.work.mapper.TTraiTeacherMapper" >
  <resultMap id="BaseResultMap" type="com.work.entity.TTraiTeacher" >
    <result column="TEACHERID" property="teacherid" jdbcType="VARCHAR" />
    <result column="TEACHERNAME" property="teachername" jdbcType="VARCHAR" />
    <result column="ISEXTERNAL" property="isexternal" jdbcType="VARCHAR" />
    <result column="COMMNET" property="commnet" jdbcType="VARCHAR" />
    <result column="TEACHEREMPID" property="teacherempid" jdbcType="VARCHAR" />
    <result column="OPERATORID" property="operatorid" jdbcType="VARCHAR" />
    <result column="OPERATORNAME" property="operatorname" jdbcType="VARCHAR" />
    <result column="OPERATORTIME" property="operatortime" jdbcType="VARCHAR" />
    <result column="DEPTCODE" property="deptcode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TEACHERID, TEACHERNAME, ISEXTERNAL, COMMNET, TEACHEREMPID, OPERATORID, OPERATORNAME, 
    OPERATORTIME, DEPTCODE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.work.entity.TTraiTeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TB_TRAI_TEACHER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insert" parameterType="com.work.entity.TTraiTeacher" >
    insert into TB_TRAI_TEACHER (TEACHERID, TEACHERNAME, ISEXTERNAL, 
      COMMNET, TEACHEREMPID, OPERATORID, 
      OPERATORNAME, OPERATORTIME, DEPTCODE
      )
    values (#{teacherid,jdbcType=VARCHAR}, #{teachername,jdbcType=VARCHAR}, #{isexternal,jdbcType=VARCHAR}, 
      #{commnet,jdbcType=VARCHAR}, #{teacherempid,jdbcType=VARCHAR}, #{operatorid,jdbcType=VARCHAR}, 
      #{operatorname,jdbcType=VARCHAR}, #{operatortime,jdbcType=VARCHAR}, #{deptcode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.work.entity.TTraiTeacher" >
    insert into TB_TRAI_TEACHER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacherid != null" >
        TEACHERID,
      </if>
      <if test="teachername != null" >
        TEACHERNAME,
      </if>
      <if test="isexternal != null" >
        ISEXTERNAL,
      </if>
      <if test="commnet != null" >
        COMMNET,
      </if>
      <if test="teacherempid != null" >
        TEACHEREMPID,
      </if>
      <if test="operatorid != null" >
        OPERATORID,
      </if>
      <if test="operatorname != null" >
        OPERATORNAME,
      </if>
      <if test="operatortime != null" >
        OPERATORTIME,
      </if>
      <if test="deptcode != null" >
        DEPTCODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacherid != null" >
        #{teacherid,jdbcType=VARCHAR},
      </if>
      <if test="teachername != null" >
        #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="isexternal != null" >
        #{isexternal,jdbcType=VARCHAR},
      </if>
      <if test="commnet != null" >
        #{commnet,jdbcType=VARCHAR},
      </if>
      <if test="teacherempid != null" >
        #{teacherempid,jdbcType=VARCHAR},
      </if>
      <if test="operatorid != null" >
        #{operatorid,jdbcType=VARCHAR},
      </if>
      <if test="operatorname != null" >
        #{operatorname,jdbcType=VARCHAR},
      </if>
      <if test="operatortime != null" >
        #{operatortime,jdbcType=VARCHAR},
      </if>
      <if test="deptcode != null" >
        #{deptcode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>