<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://mybatis.org/schema/mybatis-spring 
       http://mybatis.org/schema/mybatis-spring.xsd
       http://www.springframework.org/schema/mvc     
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
       
       
	<mvc:annotation-driven />
	<!-- 支持注解 -->
	<context:annotation-config />
	<!-- 注解扫描组件目录 -->
	<context:component-scan base-package="com.work"/>

	<!-- 使用CGLIB强制代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<bean id="myresponseBody" class="com.work.common.interceptor.MyResponseBodyAdvice"/>

	<!-- Spring Bean 工具类 -->
	<bean id="applicationUtil" class="com.work.common.ApplicationUtil"/>
	
	<!-- 全局配置 -->
	<!-- 必须放到首先位置 -->
	<bean id="app-properties-file-loader" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/" />
		<!-- 可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
	<bean id="multipartResolver" class="com.work.common.interceptor.CommonsMultiparResolver">  
	    <property name="defaultEncoding" value="UTF-8" />  
	    <!-- 指定所上传文件的总大小不能超过10485760000B。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
	    <property name="maxUploadSize" value="10485760000"></property>  
	    <property name="maxInMemorySize" value="40960"></property>  
	</bean>  
	
	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/app/*/*/*"/>
				<bean class="com.work.common.interceptor.CheckUserTokenInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	
	<!-- 数据源配置 -->
	<import resource="classpath:db-config.xml" />

	<!-- 事务配置 -->
	<import resource="classpath:transaction-config.xml" />
	
</beans>